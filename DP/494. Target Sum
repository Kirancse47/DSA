  int countSubsetSum(vector<int>arr, int s){
        int n=arr.size();
        vector<vector<int>> dp(n+1,vector<int> (s+1,0));
        dp[0][0]=1;
        for(int i=1;i<n+1;i++){
            for(int j=0;j<s+1;j++){
                if(arr[i-1]<=j){
                    dp[i][j]=dp[i-1][j-arr[i-1]] + dp[i-1][j];
                }else{
                    dp[i][j]=dp[i-1][j];
                }
            }
        }
        return dp[n][s];
    }
    
    int findTargetSumWays(vector<int>& nums, int target) {
        int tot=0;
        for(auto it : nums) tot+=it;
        if(abs(target)>tot || (tot+target)%2==1) 
            return 0;
        return countSubsetSum(nums,(tot+target)/2);
    }
