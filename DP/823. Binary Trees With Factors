    const int mod = 1e9 + 7;
    int numFactoredBinaryTrees(vector<int> &arr){
        vector < long long > dp(arr.size(), 1);
        unordered_map<int, int> mp;
        sort(arr.begin(), arr.end());
        
        for (int i = 0; i < arr.size(); i++){
            mp[arr[i]] = i;
            for (int j = i - 1; j >= 0; j--){
                if (arr[i] % arr[j] == 0){
                    int temp = arr[i] / arr[j];
                    if (mp.find(temp)!=mp.end()) dp[i] += (dp[j] *dp[mp[temp]]) % mod;
                }
            }
        }
        long long ans = 0;
        for(auto it : dp) ans+=it;
        return ans%mod;
    }
