// Memoization...
    int solve(int i,int j,int a[],vector<vector<int>> &dp){
    	if(i==j) return 0;
    	if(dp[i][j]!=-1) return dp[i][j];
    	int ans=INT_MAX;
    	for(int k=i;k<j;k++){
    		ans=min(ans,solve(i,k,a,dp)+solve(k+1,j,a,dp)+a[i-1]*a[k]*a[j]);
    	}
    	return dp[i][j]=ans;
    }
    int matrixMultiplication(int N, int arr[]){
        vector<vector<int>> dp(N,vector<int>(N,-1));
	    return solve(1,N-1,arr,dp);
        
    }
    
// Tabulation...
    int matrixMultiplication(int N, int arr[]){
        vector<vector<int>> dp(N,vector<int>(N,0));
	    int ans=INT_MAX;
	    for(int i=N-1;i>=1;i--){
	        for(int j=i+1;j<N;j++){
	            int ans=INT_MAX;
	            for(int k=i;k<j;k++){
	                ans=min(ans,dp[i][k]+dp[k+1][j]+arr[i-1]*arr[k]*arr[j]);
	            }
	            dp[i][j]=ans;
	        }
	    }
	    return dp[1][N-1];
        
    }
