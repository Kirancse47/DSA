    void subsetSum(int arr[],int n, int sum,vector<bool> &dp){
        vector<bool> prev(sum+1,false),cur(sum+1,false);
        prev[0]=true; cur[0]=true;
        for(int i=1;i<n+1;i++){
            for(int j=1;j<=sum+1;j++){
                if(j-arr[i-1]>=0) cur[j]=prev[j-arr[i-1]] || prev[j];
                else cur[j]=prev[j];
            }
            prev=cur;
        }
        dp=prev;
    }
  
	int minDifference(int arr[], int n){
	    int sum=0;
	    for(int i=0;i<n;i++) sum+=arr[i];
	    vector<bool> dp(sum+1,false);
	    subsetSum(arr,n,sum,dp);
	    int ans=INT_MAX;
	    for(int i=0;i<=sum/2;i++){
	        if(dp[i]) ans=min(ans,sum-2*i);
	    }
	    return ans;
	}
  
  Link - https://practice.geeksforgeeks.org/problems/minimum-sum-partition3317/1
