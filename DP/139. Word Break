    bool solve(int pos,string &s,unordered_set<string>&dict,vector<int>&dp){
        if(pos==s.size()) return true;
        if(dp[pos]!=-1) return dp[pos];
        string t="";
        for(int i=pos;i<s.size();i++){
            t.push_back(s[i]);
            if(dict.find(t)!=dict.end() && solve(i+1,s,dict,dp)){
                return dp[i]=true;
            }
        }
        return dp[pos]=false;
    }
    
    bool wordBreak(string s, vector<string>& wordDict) {
        unordered_set<string> dict;
        for(auto it : wordDict) dict.insert(it);
        if(dict.find(s)!=dict.end()) return true;
        vector<int> dp(s.size(),-1);
        return solve(0,s,dict,dp);
    }
