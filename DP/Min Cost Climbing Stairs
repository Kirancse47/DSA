    int solve(int i,vector<int> &cost,vector<int> &dp){
        if(i>=cost.size()) return 0;
        if(dp[i]!=-1) return dp[i];
        return dp[i]=min(cost[i]+solve(i+1,cost,dp),cost[i]+solve(i+2,cost,dp));
    }
  
    int minCostClimbingStairs(vector<int>& cost) {
        int n=cost.size();
        vector<int> dp0(n,-1),dp1(n,-1);
        return min(solve(0,cost,dp0),solve(1,cost,dp1));
    }

gfg link - https://www.geeksforgeeks.org/problems/min-cost-climbing-stairs/1
