// Using slow and first pointer...
    int findDuplicate(vector<int>& nums) {
        int s=nums[0],f=nums[0];
        do{
            s=nums[s];
            f=nums[nums[f]];
        }while(s!=f);

        f=nums[0];
        while(f!=s){
            f=nums[f];
            s=nums[s];
        }
        return s;
    }
    
// Using negation method....
    int findDuplicate(vector<int>& nums) {
        for(int i=0;i<nums.size();i++){
            if(nums[abs(nums[i])-1]<0) return abs(nums[i]);
            else nums[abs(nums[i])-1]*=(-1);
        }
        return 0;
    }
