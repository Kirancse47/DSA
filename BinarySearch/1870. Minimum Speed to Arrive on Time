    bool isP(vector<int>& dist, double hour, int mid, int n){
        double total_time=0;
        for(int i=0;i<n;i++){
            double d=dist[i]*1.0/mid;
            if(i!=n-1) total_time+=ceil(d);
            else total_time+=d;
            if(total_time>hour) return 0;
        }
        if(total_time>hour) return 0;
        return 1;
    }

    int minSpeedOnTime(vector<int>& dist, double hour) {
        int n=dist.size();
        int low=1,high=1e7,ans=-1;
        while(low<=high){
            int mid=low+(high-low)/2;
            if(isP(dist,hour,mid,n)){
                ans=mid;
                high=mid-1;
            }else{
                low=mid+1;
            }
        }
        return ans;
    }
