    int countLessEquqlMid(vector<int> &row, int mid){
        int l=0,h=row.size()-1;
        while(l<=h){
            int m=(l+h)>>1;
            if(row[m]<=mid){
                l=m+1;
            }else{
                h=m-1;
            }
        }
        return l;
    }
    
    int median(vector<vector<int>> &matrix, int r, int c){
        int low=1,high=1e9;
        while(low<=high){
            int mid=(low+high)>>1;
            int cnt=0;
            for(int i=0;i<r;i++){
                cnt+=countLessEquqlMid(matrix[i],mid);
            }
            if(cnt<=(r*c)/2){
                low=mid+1;
            }else{
                high=mid-1;
            }
        }
        return low;
    }
