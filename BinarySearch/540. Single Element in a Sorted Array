// Using XOR sum...
     int singleNonDuplicate(vector<int>& nums) {
        int ans=0;
        for(auto it : nums) ans^=it;
        return ans;
    }

// Using Binary Search...
    int singleNonDuplicate(vector<int>& nums) {
       if(nums.size()==1) return nums[0];
        int start=0,end=nums.size()-1;
        while(start<=end){
            int mid = start + ((end-start)/2);
            if(mid%2){
                if(nums[mid]==nums[mid-1]){
                    start=mid+1;
                }else{
                    end=mid-1;
                }
            }
            else{
                if(nums[mid]==nums[mid+1]){
                    start=mid+1;
                }else{
                    end=mid-1;
                }
            }
        }
        return nums[start];
    }
