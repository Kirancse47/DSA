    // Cycle checking using toposort...
    bool isCyclic(int V, unordered_map<int,vector<int>> &adj) {
        vector<int> inDeg(V,0);
        for(int i=0;i<V;i++){
            for(auto it : adj[i]) inDeg[it]++;
        }
        
        queue<int> q;
        for(int i=0;i<V;i++){
            if(inDeg[i]==0) q.push(i);
        }
        
        int cnt=0;
        while(!q.empty()){
            int node=q.front();q.pop();
            cnt++;
            for(auto it : adj[node]){
                inDeg[it]--;
                if(inDeg[it]==0) q.push(it);
            }
        }
        return !(cnt==V);
    }
    
    bool canFinish(int numCourses, vector<vector<int>>& prerequisites) {
        unordered_map<int,vector<int>> mp;
        for(auto it : prerequisites){
            mp[it[1]].push_back(it[0]);
        }
        return !isCyclic(numCourses,mp);
    }
