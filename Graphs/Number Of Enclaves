    int numberOfEnclaves(vector<vector<int>> &mat) {
        int n=mat.size(),m=mat[0].size();
        queue<pair<int,int>> q;
        for(int i=0;i<m;i++){
            if(mat[0][i]==1){
                q.push({0,i});
                mat[0][i]=0;
            }
            if(mat[n-1][i]==1){
                q.push({n-1,i});
                mat[n-1][i]=0;
            }
        }
        for(int i=0;i<n;i++){
            if(mat[i][0]==1){
                q.push({i,0});
                mat[i][0]=0;
            }
            if(mat[i][m-1]==1){
                q.push({i,m-1});
                mat[i][m-1]=0;
            }
        }
        
        int dx[]={0,0,1,-1};
        int dy[]={1,-1,0,0,};
        while(!q.empty()){
            int i=q.front().first;
            int j=q.front().second;
            q.pop();
            for(int k=0;k<4;k++){
                int x=i+dx[k];
                int y=j+dy[k];
                if(x>=0 && x<n && y>=0 && y<m && mat[x][y]==1){
                    mat[x][y]=0;
                    q.push({x,y});
                }
            }
            
        }
        int ans=0;
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(mat[i][j]==1) ans++;
            }
        }
        return ans;
    }

gfg link - https://www.geeksforgeeks.org/problems/number-of-enclaves/1
