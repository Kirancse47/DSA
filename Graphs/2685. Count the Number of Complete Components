    void dfs(int i,int &n,int &e,vector<int> adj[],vector<bool> &vis){
        n++;
        vis[i]=true;
        for(auto it : adj[i]){
            e++;
            if(!vis[it]){
                dfs(it,n,e,adj,vis);
            }
        }
    }
    int countCompleteComponents(int n, vector<vector<int>>& edges) {
        vector<int> adj[n];
        for(auto it : edges){
            adj[it[0]].push_back(it[1]);
            adj[it[1]].push_back(it[0]);
        }
        vector<bool> vis(n,false);
        int ans=0;
        for(int i=0;i<n;i++){
            if(!vis[i]){
                int node=0;
                int edges=0;
                dfs(i,node,edges,adj,vis);
                if((node*(node-1))==edges){
                    ans++;
                }
            }
        }
        return ans;
    }
