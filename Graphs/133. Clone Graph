    Node* dfs(Node *node,unordered_map<Node*,Node*> &mp){
        Node *clone=new Node(node->val);
        mp[node]=clone;
        for(auto it : node->neighbors){
            if(mp.find(it)!=mp.end()) clone->neighbors.push_back(mp[it]);
            else clone->neighbors.push_back(dfs(it,mp));
        }
        return clone;
    }
    
    Node* cloneGraph(Node* node) {
        if(!node) return node;
        if(node->neighbors.size()==0){
            return new Node(node->val);
        }
        unordered_map<Node*,Node*> mp;
        return dfs(node,mp);
    }
