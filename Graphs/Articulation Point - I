    void dfs(int node,int parent,vector<int> adj[],vector<int> &vis,vector<int> &tin,vector<int> &low,int &timer,vector<int> &ap){
        vis[node]=1;
        tin[node]=low[node]=timer++;
        int child=0;
        for(auto it : adj[node]){
            if(it==parent) continue;
            if(!vis[it]){
                dfs(it,node,adj,vis,tin,low,timer,ap);
                low[node]=min(low[node],low[it]);
                if(low[it]>=tin[node] && parent!=-1) ap[node]=1;
                child++;
            }else{
                low[node]=min(low[node],tin[it]);
            }
        }
        if(parent==-1 && child>1) ap[node]=1;
    }
  
    vector<int> articulationPoints(int V, vector<int>adj[]) {
        vector<int> vis(V,0),tin(V),low(V),ap(V,0),ans;
        int timer=0;
        for(int i=0;i<V;i++){
            if(!vis[i]){
                dfs(i,-1,adj,vis,tin,low,timer,ap);
            }
        }
        for(int i=0;i<V;i++){
            if(ap[i]) ans.push_back(i);
        }
        if(ans.size()==0) return {-1};
        return ans;
    }
    
    Link - https://practice.geeksforgeeks.org/problems/articulation-point-1/0
