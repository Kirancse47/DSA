vector<vector<string>> findSequences(string beginWord, string endWord, vector<string>& wordList) {
        vector<vector<string>> ans;
        unordered_set<string> st;
        for(auto it : wordList) st.insert(it);
        queue<vector<string>> q;
        q.push({beginWord});
        vector<string> tmp;
        tmp.push_back(beginWord);
        int level=0;
        while(!q.empty()){
            vector<string> vec=q.front();
            q.pop();
            if(vec.size() > level){
                level++;
                for(auto it : tmp){
                    st.erase(it);
                }
                tmp.clear();
            }
            string word=vec.back();
            if(word ==endWord){
                if(ans.size()==0){
                    ans.push_back(vec);
                }else if(ans[0].size()==vec.size()){
                    ans.push_back(vec);
                }
            }
            for(int i=0;i<word.size();i++){
                char c=word[i];
                for(char j='a';j<='z';j++){
                    word[i]=j;
                    if(st.count(word) > 0){
                        vec.push_back(word);
                        q.push(vec);
                        tmp.push_back(word);
                        vec.pop_back();
                    }
                }
                word[i]=c;
            }
        }
        return ans;
    }

gfg link - https://www.geeksforgeeks.org/problems/word-ladder-ii/1?utm_source=youtube&utm_medium=collab_striver_ytdescription&utm_campaign=word-ladder-ii
