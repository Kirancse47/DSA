    string topoSort(int V, unordered_map<char,vector<char>> &adj) {
	    string ans;
	    vector<int> inDeg(V,0);
	    for(int i=0;i<V;i++){
	        for(auto it : adj['a'+i]){
	            inDeg[it-'a']++;
	        }
	    }
	    
	    queue<char> q;
	    for(int i=0;i<V;i++){
	        if(inDeg[i]==0) q.push(i+'a');
	    }
	    
	    while(!q.empty()){
	        auto node=q.front();q.pop();
	        ans.push_back(node);
	        for(auto it : adj[node]){
	            inDeg[it-'a']--;
	            if(inDeg[it-'a']==0) q.push(it);
	        }
	    }
	    return ans;
	}
   string findOrder(string dict[], int N, int K) {
        unordered_map<char,vector<char>> mp;
        for(int i=0;i<N-1;i++){
            int j=0,k=0;
            while(j<dict[i].size() && k<dict[i+1].size()){
                if(dict[i][j]!=dict[i+1][k]){
                    mp[dict[i][j]].push_back(dict[i+1][k]);
                    break;
                }
                j++;k++;
            }
        }
        return topoSort(K,mp);
    }
    
    Link - https://practice.geeksforgeeks.org/problems/alien-dictionary/1/
