    void dfs(int r,int c,int r0,int c0,vector<vector<int>>& grid,vector<vector<bool>>& vis,vector<pair<int,int>> &vec){
        int n=grid.size(),m=grid[0].size();
        vis[r][c]=true;
        vec.push_back({r-r0,c-c0});
        int dx[]={0,0,1,-1};
        int dy[]={1,-1,0,0};
        for(int k=0;k<4;k++){
            int x=r+dx[k];
            int y=c+dy[k];
            if(x>=0 && y>=0 && x<n && y<m && !vis[x][y] && grid[x][y]){
                dfs(x,y,r0,c0,grid,vis,vec);
            }
        }
    }
  
    int countDistinctIslands(vector<vector<int>>& grid) {
        int n=grid.size(),m=grid[0].size();
        vector<vector<bool>> vis(n,vector<bool>(m,false));
        set<vector<pair<int,int>>> st;
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(grid[i][j] && !vis[i][j]){
                    vector<pair<int,int>> vec;
                    dfs(i,j,i,j,grid,vis,vec);
                    st.insert(vec);
                }
            }
        }
        return st.size();
    }

gfg link - https://www.geeksforgeeks.org/problems/number-of-distinct-islands/1
