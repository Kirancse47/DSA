    bool possibleBipartition(int n, vector<vector<int>>& dislikes) {
        vector<int> adj[n+1];
        for(auto it : dislikes){
            adj[it[0]].push_back(it[1]);
            adj[it[1]].push_back(it[0]);
        }
        vector<int> grp(n+1,-1);
        for(int i=1;i<=n;i++){
            if(grp[i]==-1){
                queue<int> q;
                q.push(i);
                grp[i]=0;
                while(!q.empty()){
                    int node=q.front();q.pop();
                    for(auto it : adj[node]){
                        if(grp[it]==-1){
                            q.push(it);
                            grp[it]=1-grp[node];
                        }else if(grp[it]==grp[node]) return false;
                    }
                }
            }
        }
        return true;
    }
