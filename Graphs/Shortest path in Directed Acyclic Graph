    void topo(int i,vector<pair<int,int>> adj[],stack<int> &s,vector<int> &vis){
        vis[i]=1;
        for(auto it : adj[i]){
            if(!vis[it.first]){
                topo(it.first,adj,s,vis);
            }
        }
        s.push(i);
    }
  
    vector<int> shortestPath(int N,int M, vector<vector<int>>& edges){
        vector<pair<int,int>> adj[N];
        for(auto it : edges){
            adj[it[0]].push_back({it[1],it[2]});
        }
        stack<int> s;
        vector<int> vis(N,0);
        for(int i=0;i<N;i++){
            if(!vis[i]){
                topo(i,adj,s,vis);
            }
        }
        vector<int> dis(N,1e9);
        dis[0]=0;
        while(!s.empty()){
            int node=s.top();s.pop();
            for(auto it : adj[node]){
                dis[it.first]=min(dis[it.first],it.second+dis[node]);
            }
        }
        for(int i=0;i<N;i++){
            if(dis[i]==1e9) dis[i]=-1;
        }
        return dis;
    }

gfg link - https://www.geeksforgeeks.org/problems/shortest-path-in-undirected-graph/1
