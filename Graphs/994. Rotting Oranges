    int orangesRotting(vector<vector<int>>& grid) {
        int n=grid.size(),m=grid[0].size();
        queue<pair<int,int>> q;
        int freash=0;
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(grid[i][j]==2) q.push({i,j});
                else if(grid[i][j]==1) freash++; 
            }
        }
        if(freash==0) return 0;
        int ans=0;
        while(!q.empty()){
            int len=q.size();
            for(int z=0;z<len;z++){
                int i=q.front().first;
                int j=q.front().second;
                q.pop();
                int dx[]={0,1,0,-1};
                int dy[]={1,0,-1,0};
                for(int k=0;k<4;k++){
                    int x=i+dx[k];
                    int y=j+dy[k];
                    if(x>=0 && x<n && y>=0 && y<m && grid[x][y]==1){
                        grid[x][y]=2;
                        q.push({x,y});
                        freash--;
                    }
                }
            }
            ans++;
        }
        if(freash>0) return -1;
        return ans-1;
    }
