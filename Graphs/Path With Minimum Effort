    int MinimumEffort(int rows, int columns, vector<vector<int>> &heights) {
        vector<vector<int>> dis(rows,vector<int>(columns,1e9));
        priority_queue<pair<int,pair<int,int>>, vector<pair<int,pair<int,int>>>, greater<pair<int,pair<int,int>>> > pq;
        pq.push({0,{0,0}});
        dis[0][0]=0;
        int dr[]={0,0,1,-1};
        int dc[]={1,-1,0,0};
        while(!pq.empty()){
            auto tp=pq.top();pq.pop();
            int dist=tp.first;
            int r=tp.second.first;
            int c=tp.second.second;
            if(r==rows-1 && c==columns-1) return dist;
            for(int k=0;k<4;k++){
                int nr=r+dr[k];
                int nc=c+dc[k];
                if(nr>=0 && nr<rows && nc>=0 && nc<columns){
                    int diff=max(abs(heights[r][c]-heights[nr][nc]),dis[r][c]);
                    if(diff<dis[nr][nc]){
                        dis[nr][nc]=diff;
                        pq.push({diff,{nr,nc}});
                    }
                }
            }
        }
        return 0;
    }

gfg link - https://www.geeksforgeeks.org/problems/path-with-minimum-effort/1
