    int solve(int l,int r,vector<int> &a,vector<vector<int>> &dp){
        if(l>r) return 0;
        if(l==r) return a[l];
        if(r-l+1==2) return max(a[l],a[r]);
        if(dp[l][r]!=-1) return dp[l][r];
        int left=a[l]+min(solve(l+2,r,a,dp),solve(l+1,r-1,a,dp));
        int right=a[r]+min(solve(l+1,r-1,a,dp),solve(l,r-2,a,dp));
        return dp[l][r]=max(left,right);
    }
    
    int maxCoins(vector<int>&A,int n){
	    vector<vector<int>> dp(n,vector<int>(n,-1));
	    return solve(0,n-1,A,dp);
    }
    
    Link - https://practice.geeksforgeeks.org/problems/pots-of-gold-game/1
