    TreeNode* inorderSucc(TreeNode* root){
        TreeNode *cur=root;
        while(cur && cur->left){
            cur=cur->left;
        }
        return cur;
    }
    
    TreeNode* deleteNode(TreeNode* root, int key) {
        if(!root) return root;
        if(key>root->val){
            root->right=deleteNode(root->right,key);
        }
        else if(key<root->val){
            root->left=deleteNode(root->left,key);
        }
        else{
            if(!root->left){
                TreeNode *t=root->right;
                delete(root);
                return t;
            }
            else if(!root->right){
                TreeNode *t=root->left;
                delete(root);
                return t;
            }
            else{
                TreeNode *t=inorderSucc(root->right);
                root->val=t->val;
                root->right=deleteNode(root->right,root->val);
            }
        }
        return root;
    }
