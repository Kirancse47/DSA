// For positive element only...
    int lenOfLongSubarr(int A[],  int N, int K) { 
        // Complete the function
        int ans=0;
        int i=0,j=0;
        int sum=0;
        while(j<N){
            sum+=A[j];
            if(sum<K) j++;
            else if(sum==K) {
                ans=max(ans,j-i+1);
                j++;
            }else{
                while(sum>K){
                    sum-=A[i];
                    i++;
                    if(sum==K) ans=max(ans,j-i+1);
                }
                j++;
            }
        }
        return ans;
    }
    
// For all elments....
    int lenOfLongSubarr(int A[],  int N, int K) { 
        // Complete the function
        unordered_map<int,int> mp;
        int sum=0,ans=0;
        for(int i=0;i<N;i++){
            sum+=A[i];
            if(sum==K) ans=i+1;
            if(mp.find(sum-K)!=mp.end()){
                ans=max(ans,i-mp[sum-K]);
            }
            if(mp.find(sum)==mp.end()){
                mp[sum]=i;
            }
        }
        return ans;
    }
    
    Link - https://practice.geeksforgeeks.org/problems/longest-sub-array-with-sum-k0809/1
