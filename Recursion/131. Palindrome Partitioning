    bool isPalindrome(string s,int i,int j){
        if(i>=j) return true;
        while(i<j){
            if(s[i]!=s[j]){
                return false;
            }
            i++;j--;
        }
        return true;
    }
    
    void pp(string s,int ind,vector<string>&path, vector<vector<string>> &res){
        if(ind==s.size()){
            res.push_back(path);
            return;
        }
        for(int k=ind;k<s.size();k++){
            if(isPalindrome(s,ind,k)){
                path.push_back(s.substr(ind,k-ind+1));
                pp(s,k+1,path,res);
                path.pop_back();
            }
        }
    }
    
    vector<vector<string>> partition(string s) {
        vector<string> path;
        vector<vector<string>> res;
        pp(s,0,path,res);
        return res;
    }
