// By Recursion
    void solve(int i,vector<int> &nums,vector<int> &ds,vector<vector<int>> &ans){
        if(i==nums.size()){
            ans.push_back(ds);
            return;
        }
        ds.push_back(nums[i]);
        solve(i+1,nums,ds,ans);
        ds.pop_back();
        solve(i+1,nums,ds,ans);        
    }
    
    vector<vector<int>> subsets(vector<int>& nums) {
        vector<vector<int>> ans;
        vector<int> ds;
        solve(0,nums,ds,ans);
        return ans;
    }
    
// By Bit Manupulation..
     vector<vector<int>> subsets(vector<int>& nums) {
        int n=nums.size();
        vector<vector<int>> ans;
        for(int i=0;i<(1<<n);i++){
            vector<int> temp;
            for(int j=0;j<n;j++){
                if(i & (1<<j)) temp.push_back(nums[j]);
            }
            ans.push_back(temp);
        }
        return ans;
    }
