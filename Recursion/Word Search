int dx[4]={0,0,1,-1};
    int dy[4]={1,-1,0,0};
    bool solve(int idx,int i,int j,vector<vector<char>> &mat,string &word){
        if(idx==word.size()-1) return true;
        int n=mat.size(),m=mat[0].size();
        char tmp=mat[i][j];
        mat[i][j]='#';
        for(int k=0;k<4;k++){
            int x=i+dx[k];
            int y=j+dy[k];
            if(x>=0 && x<n && y>=0 && y<m && mat[x][y]==word[idx+1]){
                if(solve(idx+1,x,y,mat,word)) return true;
            }
        }
        mat[i][j]=tmp; //backtracking
        return false;
    }
    bool isWordExist(vector<vector<char>>& mat, string& word) {
        int n=mat.size(),m=mat[0].size();
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(mat[i][j]==word[0]){
                    if(solve(0,i,j,mat,word)) return true;
                }
            }
        }
        return false;
    }

gfg link - https://www.geeksforgeeks.org/problems/word-search/1
