    void solve(int i,int j,int n,string move,vector<vector<int>> &m,vector<vector<int>> &vis,int di[],int dj[],vector<string> &ans){
        if(i==n-1 && j==n-1){
            ans.push_back(move);
            return;
        }
        string dir="DLRU";
        for(int idx=0;idx<4;idx++){
            int nexti=i+di[idx];
            int nextj=j+dj[idx];
            if(nexti>=0 && nextj>=0 && nexti<n && nextj<n && !vis[nexti][nextj] && m[nexti][nextj]){
                vis[i][j]=1;
                solve(nexti,nextj,n,move+dir[idx],m,vis,di,dj,ans);
                vis[i][j]=0;
            }
        }
    }
    
    vector<string> findPath(vector<vector<int>> &m, int n) {
        // Your code goes here
        vector<string> ans;
        vector<vector<int>> vis(n,vector<int>(n,0));
        int di[]={+1,0,0,-1};
        int dj[]={0,-1,+1,0};
        if(m[0][0]==1){
            solve(0,0,n,"",m,vis,di,dj,ans);
            
        }
        return ans;
    }
    
    Link - https://practice.geeksforgeeks.org/problems/rat-in-a-maze-problem/1#
