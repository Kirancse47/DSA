void solve(int i,int j,int n,int m,vector<vector<int>> &g,vector<int> &ds,vector<vector<int>> &ans){
        if(i==n-1 && j==m-1){
            ans.push_back(ds);
            return;
        }
        if(i<n-1){
            ds.push_back(g[i+1][j]);
            solve(i+1,j,n,m,g,ds,ans);
            ds.pop_back();
        }
        if(j<m-1){
            ds.push_back(g[i][j+1]);
            solve(i,j+1,n,m,g,ds,ans);
            ds.pop_back();
        }
    }

    vector<vector<int>> findAllPossiblePaths(int n, int m, vector<vector<int>> &grid){
        vector<vector<int>> ans;
        vector<int> ds;
        ds.push_back(grid[0][0]);
        solve(0,0,n,m,grid,ds,ans);
        return ans;
    }
    
    Link - https://practice.geeksforgeeks.org/problems/find-all-possible-paths-from-top-to-bottom/1/?page=2&status[]=unsolved&curated[]=7&sortBy=submissions#
